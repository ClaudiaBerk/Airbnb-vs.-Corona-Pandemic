geom_point()
View(ggplot_id)
# Q-Q plot id
boxplot(data_airbnb_uk_cleaned_2$id,
ylab = "id"
)
boxplot(data_airbnb_uk_cleaned_2$price,
ylab = "price"
)
# And now plot the data using ggplot.
ggplot(data = data_host_na, aes(x = year, y = n)) +
geom_bar(stat = "identity", fill = "purple") +
labs(title = "Date of becoming a host in years for the na dataset",
x = "year", y = "Number of host")
# Q-Q plot price
data_airbnb_uk_cleaned_2 %>%
qqnorm(price, main = "Normal Q-Q plot")
qplot(seq_along(data_airbnb_uk_cleaned_2$id), data_airbnb_uk_cleaned_2$id)
# Q-Q plot id
boxplot(data_airbnb_uk_cleaned_2$id,
ylab = "id"
)
boxplot(data_airbnb_uk_cleaned_2$price,
ylab = "price"
)
View(data_airbnb_uk_cleaned_2)
View(data_airbnb_uk_cleaned_1)
View(data_airbnb_uk)
View(data_airbnb_uk_cleaned_1)
data_airbnb_uk_cleaned_1 <- data_airbnb_uk %>% select(id, city, quarter, year, year_quarter, neighbourhood_cleansed, room_type, calculated_host_listings_count, review_scores_rating, price)
View(data_airbnb_uk_cleaned_1)
# Q-Q plot neighbourhood_cleansed
boxplot(data_airbnb_uk_cleaned_2$neighbourhood_cleansed,
ylab = "neighbourhood_cleansed"
)
# Q-Q plot neighbourhood_cleansed
boxplot(data_airbnb_uk_cleaned_2$as.factor(neighbourhood_cleansed),
ylab = "neighbourhood_cleansed"
)
# Q-Q plot neighbourhood_cleansed
boxplot(data_airbnb_uk_cleaned_2$neighbourhood_cleansed,
ylab = "neighbourhood_cleansed"
)
# Q-Q plot neighbourhood_cleansed
neighbourhood_cleansed_plot <- as.factor(neighbourhood_cleansed) %>%
boxplot(data_airbnb_uk_cleaned_2$neighbourhood_cleansed,
ylab = "neighbourhood_cleansed"
)
# Q-Q plot neighbourhood_cleansed
neighbourhood_cleansed_plot <- as.factor(data_airbnb_uk_cleaned_2$neighbourhood_cleansed) %>%
boxplot(data_airbnb_uk_cleaned_2$neighbourhood_cleansed,
ylab = "neighbourhood_cleansed"
)
# Q-Q plot neighbourhood_cleansed
neighbourhood_cleansed_plot <- as.numeric(data_airbnb_uk_cleaned_2$neighbourhood_cleansed) %>%
boxplot(data_airbnb_uk_cleaned_2$neighbourhood_cleansed,
ylab = "neighbourhood_cleansed"
)
# Q-Q plot city
boxplot(data_airbnb_uk_cleaned_2$city,
ylab = "city"
)
# Q-Q plot id
boxplot(data_airbnb_uk_cleaned_2$id,
ylab = "id"
)
# Q-Q plot quarter
boxplot(data_airbnb_uk_cleaned_2$quarter,
ylab = "quarter"
)
# Q-Q plot room_type
boxplot(data_airbnb_uk_cleaned_2$room_type,
ylab = "room_type"
)
# plot calculated_host_listings_count
boxplot(data_airbnb_uk_cleaned_2$calculated_host_listings_count,
ylab = "calculated_host_listings_count"
)
# plot review_scores_rating_reschaled
boxplot(data_airbnb_uk_cleaned_2$id,
ylab = "id"
)
# plot price
boxplot(data_airbnb_uk_cleaned_2$price,
ylab = "price"
)
# plot city
ggplot(data_airbnb_uk_cleaned_2, aes(city)) +
geom_bar() +
labs(y = "city_count")
# plot neighbourhood_cleansed
ggplot(data_airbnb_uk_cleaned_2, aes(neighbourhood_cleansed)) +
geom_bar() +
labs(y = "neighbourhood_cleansed_count")
# plot room_type
ggplot(data_airbnb_uk_cleaned_2, aes(room_type)) +
geom_bar() +
labs(y = "room_type_count")
## for the variables id, city, quarter, year, year_quarter, neighbourhood_cleansed, room_type, calculated_host_listings_count, review_scores_rating_rescaled and price in the dataset data_airbnb_uk_cleaned_2
# boxplot id
boxplot(data_airbnb_uk_cleaned_2$id,
ylab = "id"
)
# plot city
ggplot(data_airbnb_uk_cleaned_2, aes(city)) +
geom_bar() +
labs(y = "city_count")
# boxplot quarter
boxplot(data_airbnb_uk_cleaned_2$quarter,
ylab = "quarter"
)
# boxplot year
boxplot(data_airbnb_uk_cleaned_2$year,
ylab = "year"
)
# boxplot year_quarter
boxplot(data_airbnb_uk_cleaned_2$year_quarter,
ylab = "year_quarter"
)
## for the variables id, city, quarter, year, year_quarter, neighbourhood_cleansed, room_type, calculated_host_listings_count, review_scores_rating_rescaled and price in the dataset data_airbnb_uk_cleaned_2
# boxplot id
boxplot(data_airbnb_uk_cleaned_2$id,
ylab = "id"
)
# plot city
ggplot(data_airbnb_uk_cleaned_2, aes(city)) +
geom_bar() +
labs(y = "city_count")
# boxplot quarter
boxplot(data_airbnb_uk_cleaned_2$quarter,
ylab = "quarter"
)
# boxplot year
boxplot(data_airbnb_uk_cleaned_2$year,
ylab = "year"
)
# boxplot year_quarter
ggplot(data_airbnb_uk_cleaned_2, aes(year_quarter)) +
geom_bar() +
labs(y = "year_quarter_count")
# plot neighbourhood_cleansed
ggplot(data_airbnb_uk_cleaned_2, aes(neighbourhood_cleansed)) +
geom_bar() +
labs(y = "neighbourhood_cleansed_count")
# plot room_type
ggplot(data_airbnb_uk_cleaned_2, aes(room_type)) +
geom_bar() +
labs(y = "room_type_count")
# plot calculated_host_listings_count
boxplot(data_airbnb_uk_cleaned_2$calculated_host_listings_count,
ylab = "calculated_host_listings_count"
)
# plot review_scores_rating_reschaled
boxplot(data_airbnb_uk_cleaned_2$id,
ylab = "id"
)
# plot price
boxplot(data_airbnb_uk_cleaned_2$price,
ylab = "price"
)
ggplot(data_airbnb_uk_cleaned_2, aes(year)) +
geom_bar() +
labs(y = "year_count")
## for the variables id, city, neighbourhood_cleansed, room_type, calculated_host_listings_count, review_scores_rating_rescaled and price in the dataset data_airbnb_uk_cleaned_2
# boxplot id
boxplot(data_airbnb_uk_cleaned_2$id,
ylab = "id"
)
# plot city
ggplot(data_airbnb_uk_cleaned_2, aes(city)) +
geom_bar() +
labs(y = "city_count")
# plot neighbourhood_cleansed
ggplot(data_airbnb_uk_cleaned_2, aes(neighbourhood_cleansed)) +
geom_bar() +
labs(y = "neighbourhood_cleansed_count")
# plot room_type
ggplot(data_airbnb_uk_cleaned_2, aes(room_type)) +
geom_bar() +
labs(y = "room_type_count")
# plot calculated_host_listings_count
boxplot(data_airbnb_uk_cleaned_2$calculated_host_listings_count,
ylab = "calculated_host_listings_count"
)
# plot review_scores_rating_reschaled
boxplot(data_airbnb_uk_cleaned_2$id,
ylab = "id"
)
# plot price
boxplot(data_airbnb_uk_cleaned_2$price,
ylab = "price"
)
## Conclusion:
View(data_airbnb_uk_cleaned_2)
## for the variables neighbourhood_cleansed, room_type, calculated_host_listings_count, review_scores_rating_rescaled and price in the dataset data_airbnb_uk_cleaned_2
# plot neighbourhood_cleansed
ggplot(data_airbnb_uk_cleaned_2, aes(neighbourhood_cleansed)) +
geom_bar() +
labs(y = "neighbourhood_cleansed_count")
# plot room_type
ggplot(data_airbnb_uk_cleaned_2, aes(room_type)) +
geom_bar() +
labs(y = "room_type_count")
# plot calculated_host_listings_count
boxplot(data_airbnb_uk_cleaned_2$calculated_host_listings_count,
ylab = "calculated_host_listings_count"
)
# plot review_scores_rating_reschaled
boxplot(data_airbnb_uk_cleaned_2$id,
ylab = "id"
)
# plot price
boxplot(data_airbnb_uk_cleaned_2$price,
ylab = "price"
)
## Conclusion:
## for the variables neighbourhood_cleansed, room_type, calculated_host_listings_count, review_scores_rating_rescaled and price in the dataset data_airbnb_uk_cleaned_2
# plot neighbourhood_cleansed
ggplot(data_airbnb_uk_cleaned_2, aes(neighbourhood_cleansed)) +
geom_bar() +
labs(y = "neighbourhood_cleansed_count")
# plot room_type
ggplot(data_airbnb_uk_cleaned_2, aes(room_type)) +
geom_bar() +
labs(y = "room_type_count")
# plot calculated_host_listings_count
boxplot(data_airbnb_uk_cleaned_2$calculated_host_listings_count,
ylab = "calculated_host_listings_count"
)
# plot review_scores_rating_reschaled
boxplot(data_airbnb_uk_cleaned_2$review_scores_rating_rescaled,
ylab = "review_scores_rating_reschaled_count"
)
# plot price
boxplot(data_airbnb_uk_cleaned_2$price,
ylab = "price"
)
## Conclusion: the variable neighbourhoods has too many categories to run a clear plot, we need to make categories out of them. The variable room_type clearly does not show many hotel rooms and shared rooms across from the other two types. Calculated host listings has a couple of outliers around 600 and than around 900.
count(data_airbnb_uk_cleaned_2$neighbourhood_cleansed)
table(data_airbnb_uk_cleaned_2$neighbourhood_cleansed)
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
include = FALSE)
# Loading packages
library(plyr)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(readr)
library(googledrive)
library(caret)
library(data.table)
library(R.utils)
# importing the datasets from the Google Drive
data_id <- "1AzdybwMX-2QRfcolBv-2xT-5XKUeQpRhLBXtH1n47qM"
drive_download(as_id(data_id), path = "listings_uk.csv", overwrite = TRUE)
df_drive <- read.csv("listings_uk.csv")
urls <- as.character(df_drive$link)
listings_uk <- lapply(urls, function(url) {
print(paste0("Now downloading ... ", url))
city = tolower(as.character(df_drive$city[match(url, df_drive$link)]))
res = fread(url)
res$city <- city
return(res)
})
# merging the datasets into one dataset
data_airbnb_uk = do.call('rbind', listings_uk)
head(data_airbnb_uk)
# creating new variables
library("dint")
data_airbnb_uk$quarter <- get_quarter(data_airbnb_uk$last_scraped)
data_airbnb_uk$year <- get_year(data_airbnb_uk$last_scraped)
library("zoo")
data_airbnb_uk$year_quarter <- as.yearqtr(data_airbnb_uk$last_scraped, format="%Y-%m-%d")
data_airbnb_uk$year_quarter <- format(data_airbnb_uk$year_quarter, format = "%Y-%q")
# rearranging the order in the dataset
data_airbnb_uk <- data_airbnb_uk %>%
relocate(quarter, .after = last_scraped) %>%
relocate(year, .after = quarter) %>%
relocate(year_quarter, .after = year)
data_airbnb_uk_cleaned_1 <- data_airbnb_uk %>% select(id, city, quarter, year, year_quarter, neighbourhood_cleansed, room_type, calculated_host_listings_count, review_scores_rating, price)
summary()
summary(data_airbnb_uk_cleaned_1)
data_airbnb_uk_cleaned_1 <- data_airbnb_uk_cleaned_1 %>%
mutate(review_scores_rating_rescaled = ifelse(review_scores_rating>5,review_scores_rating/20, review_scores_rating))
summary(data_airbnb_uk_cleaned_1)
summary(data_airbnb_uk_cleaned_1)
# Remove the dollar sign and commas (for prices above thousand)
data_airbnb_uk_cleaned_1$price <- gsub('[$,]', '', data_airbnb_uk_cleaned_1$price)
# Changing price variable from character to numeric
data_airbnb_uk_cleaned_1$price <- as.numeric(data_airbnb_uk_cleaned_1$price)
# Check for the results
class(data_airbnb_uk_cleaned_1$price)
summary(data_airbnb_uk_cleaned_1)
# First a dataset is created with the variables with only the oberservations that have NA's for the review score for comparison.
data_airbnb_uk_na <- data_airbnb_uk[is.na(data_airbnb_uk$review_scores_rating),]
# First a dataset is created with the variables with only the oberservations that have NA's for the review score for comparison.
data_airbnb_uk_na <- data_airbnb_uk[is.na(data_airbnb_uk$review_scores_rating),]
data_airbnb_uk %>%
count(host_is_superhost)
data_airbnb_uk_na %>%
count(host_is_superhost)
data_airbnb_uk %>%
count(host_is_superhost)
data_airbnb_uk_na %>%
count(host_is_superhost)
data_airbnb_uk$price <- gsub('[$,]', '', data_airbnb_uk$price)
# Changing price variable from character to numeric
data_airbnb_uk$price <- as.numeric(data_airbnb_uk$price)
# Check for the results
class(data_airbnb_uk$price)
# Remove the dollar sign and commas (for prices above thousand)
data_airbnb_uk_na$price <- gsub('[$,]', '', data_airbnb_uk_na$price)
# Changing price variable from character to numeric
data_airbnb_uk_na$price <- as.numeric(data_airbnb_uk_na$price)
# Check for the results
class(data_airbnb_uk_na$price)
data_airbnb_uk %>%
summarize(mean(price))
data_airbnb_uk_na %>%
summarize(mean(price))
data_host <- data_airbnb_uk %>%
count(host_since)
data_host_na <- data_airbnb_uk_na %>%
count(host_since)
ggplot(data = data_host, aes(x = host_since, y = n)) +
geom_bar(stat = "identity", fill = "purple") +
labs(title = "Date of becoming a host",
x = "Date", y = "Number of host")
dates <- as.POSIXct(data_host$host_since, format="%Y-%m-%d")
dates_2 <- format(dates, format="%Y")
dates_2 <- as.data.frame(dates_2)
data_host$year <- dates_2$dates
ggplot(data = data_host, aes(x = year, y = n)) +
geom_bar(stat = "identity", fill = "purple") +
labs(title = "Date of becoming a host in years",
x = "year", y = "Number of host")
ggplot(data = data_host, aes(x = year, y = n)) +
geom_bar(stat = "identity", fill = "purple") +
labs(title = "Date of becoming a host in years",
x = "year", y = "Number of host")
# Better
# Now let's also do this for the dataset with na's.
# First convert the data to year
dates_na <- as.POSIXct(data_host_na$host_since, format="%Y-%m-%d")
dates_2_na <- format(dates_na, format="%Y")
dates_2_na <- as.data.frame(dates_2_na)
data_host_na$year <- dates_2_na$dates
# And now plot the data using ggplot.
ggplot(data = data_host_na, aes(x = year, y = n)) +
geom_bar(stat = "identity", fill = "purple") +
labs(title = "Date of becoming a host in years for the na dataset",
x = "year", y = "Number of host")
data_airbnb_uk_cleaned_2 <- data_airbnb_uk_cleaned_1 %>% drop_na()
data_airbnb_uk_cleaned_2 <- data_airbnb_uk_cleaned_1 %>% drop_na()
```
View(data_airbnb_uk_cleaned_2)
ggplot(data_airbnb_uk_cleaned_2, aes(neighbourhood_cleansed)) +
geom_bar() +
labs(y = "neighbourhood_cleansed_count")
ggplot(data_airbnb_uk_cleaned_2, aes(room_type)) +
geom_bar() +
labs(y = "room_type_count")
boxplot(data_airbnb_uk_cleaned_2$calculated_host_listings_count,
ylab = "calculated_host_listings_count"
)
ggplot(data_airbnb_uk_cleaned_2, aes(calculated_host_listings_count)) +
geom_bar() +
labs(y = "room_type_count")
ggplot(data_airbnb_uk_cleaned_2, aes(calculated_host_listings_count)) +
geom_point() +
labs(y = "room_type_count")
ggplot(data_airbnb_uk_cleaned_2, aes(calculated_host_listings_count)) +
geom_boxplot() +
labs(y = "room_type_count")
boxplot(data_airbnb_uk_cleaned_2$calculated_host_listings_count,
ylab = "calculated_host_listings_count"
)
ggplot(data_airbnb_uk_cleaned_2, aes(calculated_host_listings_count)) +
geom_boxplot() +
labs(y = "room_type_count")
boxplot(data_airbnb_uk_cleaned_2$review_scores_rating_rescaled,
ylab = "review_scores_rating_reschaled_count"
)
boxplot(data_airbnb_uk_cleaned_2$price,
ylab = "price"
)
View(data_airbnb_uk_cleaned_2)
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
include = FALSE)
# Loading packages
library(plyr)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(readr)
library(googledrive)
library(caret)
library(data.table)
library(R.utils)
# importing the datasets from the Google Drive
data_id <- "1AzdybwMX-2QRfcolBv-2xT-5XKUeQpRhLBXtH1n47qM"
drive_download(as_id(data_id), path = "listings_uk.csv", overwrite = TRUE)
df_drive <- read.csv("listings_uk.csv")
urls <- as.character(df_drive$link)
listings_uk <- lapply(urls, function(url) {
print(paste0("Now downloading ... ", url))
city = tolower(as.character(df_drive$city[match(url, df_drive$link)]))
res = fread(url)
res$city <- city
return(res)
})
# merging the datasets into one dataset
data_airbnb_uk = do.call('rbind', listings_uk)
# creating new variables
library("dint")
data_airbnb_uk$quarter <- get_quarter(data_airbnb_uk$last_scraped)
data_airbnb_uk$year <- get_year(data_airbnb_uk$last_scraped)
library("zoo")
data_airbnb_uk$year_quarter <- as.yearqtr(data_airbnb_uk$last_scraped, format="%Y-%m-%d")
data_airbnb_uk$year_quarter <- format(data_airbnb_uk$year_quarter, format = "%Y-%q")
# rearranging the order in the dataset
data_airbnb_uk <- data_airbnb_uk %>%
relocate(quarter, .after = last_scraped) %>%
relocate(year, .after = quarter) %>%
relocate(year_quarter, .after = year)
data_airbnb_uk_cleaned_1 <- data_airbnb_uk %>%
select(id, city, quarter, year, year_quarter, neighbourhood_cleansed, room_type, calculated_host_listings_count, review_scores_rating, price)
data_airbnb_uk_cleaned_1 <- data_airbnb_uk_cleaned_1 %>%
mutate(review_scores_rating_rescaled = ifelse(review_scores_rating>5,review_scores_rating/20, review_scores_rating))
# Remove the dollar sign and commas (for prices above thousand)
data_airbnb_uk_cleaned_1$price <- gsub('[$,]', '', data_airbnb_uk_cleaned_1$price)
# Changing price variable from character to numeric
data_airbnb_uk_cleaned_1$price <- as.numeric(data_airbnb_uk_cleaned_1$price)
# Check for the results
class(data_airbnb_uk_cleaned_1$price)
# First a dataset is created with the variables with only the oberservations that have NA's for the review score for comparison.
data_airbnb_uk_na <- data_airbnb_uk[is.na(data_airbnb_uk$review_scores_rating),]
# Here are some interesting findings when comparing the data
# host is super_host
data_airbnb_uk %>%
count(host_is_superhost)
data_airbnb_uk_na %>%
count(host_is_superhost)
# for the dataset with na's only 3,8% is a  superhost and for the dataset without the na's it is 14%.
# For these datasets the price also needs to be converted.
# Remove the dollar sign and commas (for prices above thousand)
data_airbnb_uk$price <- gsub('[$,]', '', data_airbnb_uk$price)
# Changing price variable from character to numeric
data_airbnb_uk$price <- as.numeric(data_airbnb_uk$price)
# Check for the results
class(data_airbnb_uk$price)
# Remove the dollar sign and commas (for prices above thousand)
data_airbnb_uk_na$price <- gsub('[$,]', '', data_airbnb_uk_na$price)
# Changing price variable from character to numeric
data_airbnb_uk_na$price <- as.numeric(data_airbnb_uk_na$price)
# Check for the results
class(data_airbnb_uk_na$price)
# price
data_airbnb_uk %>%
summarize(mean(price))
data_airbnb_uk_na %>%
summarize(mean(price))
# Another reason that some listings have no reviews can be that the properties are new on Airbnb.
# unfortunately there is no date for when the listing first appeared on Airbnb. But there is a date for when the host first appeared on Airbnb. So we will look at this variable. We will do this via plotting the data
# first extract how many times each data occurs in both the dataset without na's and the dataset with na's,
data_host <- data_airbnb_uk %>%
count(host_since)
data_host_na <- data_airbnb_uk_na %>%
count(host_since)
# Then plot the data using ggplot
# plot the data for the dataset without na's using ggplot
ggplot(data = data_host, aes(x = host_since, y = n)) +
geom_bar(stat = "identity", fill = "purple") +
labs(title = "Date of becoming a host",
x = "Date", y = "Number of host")
# plot the data for the dataset with na's using ggplot
ggplot(data = data_host_na, aes(x = host_since, y = n)) +
geom_bar(stat = "identity", fill = "purple") +
labs(title = "Date of becoming a host",
x = "Date", y = "Number of host")
# as you can see these aren't really usable plots. It is better to look at it in years.
# Lets convert the data to years for the dataset without na's
dates <- as.POSIXct(data_host$host_since, format="%Y-%m-%d")
dates_2 <- format(dates, format="%Y")
dates_2 <- as.data.frame(dates_2)
data_host$year <- dates_2$dates
# And now plot the data using ggplot
ggplot(data = data_host, aes(x = year, y = n)) +
geom_bar(stat = "identity", fill = "purple") +
labs(title = "Date of becoming a host in years",
x = "year", y = "Number of host")
# Better
# Now let's also do this for the dataset with na's.
# First convert the data to year
dates_na <- as.POSIXct(data_host_na$host_since, format="%Y-%m-%d")
dates_2_na <- format(dates_na, format="%Y")
dates_2_na <- as.data.frame(dates_2_na)
data_host_na$year <- dates_2_na$dates
# And now plot the data using ggplot.
ggplot(data = data_host_na, aes(x = year, y = n)) +
geom_bar(stat = "identity", fill = "purple") +
labs(title = "Date of becoming a host in years for the na dataset",
x = "year", y = "Number of host")
# The plots do not differ much from each other. So the date is not the reason for the missing values.
# There is also the possibility that hosts can switch off the possibility to give a review. When looking at the renting on Airbnb page on the Airbnb websites there is no indication that host have the possibility that they can switch off the possibility to give a review.
data_airbnb_uk_cleaned_2 <- data_airbnb_uk_cleaned_1 %>% drop_na()
```
View(data_airbnb_uk_cleaned_2)
